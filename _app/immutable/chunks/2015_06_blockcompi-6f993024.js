import{S as No,i as Ro,s as Go,k as l,q as s,a as r,l as a,m as i,r as n,h as o,c as d,n as Bo,b as p,G as e,C as jt}from"./index-91060271.js";function Do(Fo){let y,Ce,re,E,Ie,de,C,ke,he,I,we,ce,k,Te,ue,w,Le,pe,T,ge,fe,h,M,Se,Me,A,Ae,Be,B,Fe,Ne,F,Re,Ge,N,De,Oe,R,xe,He,G,We,je,D,Ue,Xe,O,ze,Ve,x,Je,qe,H,Ye,Ke,W,Qe,Ze,j,$e,me,L,et,be,u,U,tt,ot,X,lt,at,z,it,st,V,nt,rt,J,dt,ht,q,ct,ut,Y,pt,ft,K,mt,bt,Q,vt,yt,Z,Pt,_t,$,Et,Ct,ee,It,ve,g,kt,ye,b,te,wt,Tt,oe,Lt,gt,le,St,Mt,ae,At,Bt,ie,Ft,Nt,se,Rt,Gt,ne,Dt,Pe,S,Ot,_e,P,xt,_,Ht,Wt;return{c(){y=l("h1"),Ce=s("BlockComPi"),re=r(),E=l("p"),Ie=s("A Block of a Computer of a Raspberry Pi Phone"),de=r(),C=l("p"),ke=s("No longer working as of 2017 (due to 2G being phased out)"),he=r(),I=l("h2"),we=s("Overview"),ce=r(),k=l("p"),Te=s("Thought of what to do with your Raspberry Pi? During Mid 2015, I decided to use a Raspberry Pi 2, and mainly some other components to build a Raspberry Pi Phone, mainly because i had an Adafruit FONA 2G that is going to be outdated in 2017. This design is partially based on the PiPhone, because i also conveniently had a PiTFT 2.8 , so I couldn’t use this TyPhone Design."),ue=r(),w=l("p"),Le=s(`Most DIY Phones back then only showed that they could make phone calls.
I wanted to improve it and make it receive phone calls as well as send/ receive text messages`),pe=r(),T=l("p"),ge=s("Components needed to build:"),fe=r(),h=l("ol"),M=l("li"),Se=s("Raspberry Pi 2"),Me=r(),A=l("li"),Ae=s("Raspberry Pi Camera Module"),Be=r(),B=l("li"),Fe=s("Adafruit PiTFT 2.8 resistive"),Ne=r(),F=l("li"),Re=s("Adafruit FONA 2G (could use 3G but have to modify the design a bit)"),Ge=r(),N=l("li"),De=s("Earphones with Mic"),Oe=r(),R=l("li"),xe=s("5V boost converter"),He=r(),G=l("li"),We=s("2000mah or so battery from phone"),je=r(),D=l("li"),Ue=s("Buttons, Female Headers, Diode"),Xe=r(),O=l("li"),ze=s("Wires and a PCB to connect everything together"),Ve=r(),x=l("li"),Je=s("White Acrylic Case with PLA filament from 3Doodler to connect the pieces together"),qe=r(),H=l("li"),Ye=s("Wooden Back Plate"),Ke=r(),W=l("li"),Qe=s("Black Stylus (Nintendo DS)"),Ze=r(),j=l("li"),$e=s("Buzzer (For Notifications) (connects through expansion port)"),me=r(),L=l("p"),et=s("Software:"),be=r(),u=l("ol"),U=l("li"),tt=s("Based on Raspbian Jessie"),ot=r(),X=l("li"),lt=s("Crappily Coded in Python"),at=r(),z=l("li"),it=s("Uses PyGame, with PiTFT Rotated 180"),st=r(),V=l("li"),nt=s("garthvh’s menu_8button.py is under no license, and has been adapted into PitftGraphicLib.py for easier use with PyGame in my code"),rt=r(),J=l("li"),dt=s("No Bitmaps or images used"),ht=r(),q=l("li"),ct=s("Note that virtual keyboard, licensed under the GNU GPL, is included, used, and has not been modified."),ut=r(),Y=l("li"),pt=s("The Main Menu, Notifcentral.py, has a Notifications and Service system and an App drawer which layout apps as in App.py"),ft=r(),K=l("li"),mt=s("Can actually Receive and send Phone Calls and SMS through Notifications and Service System"),bt=r(),Q=l("li"),vt=s("The Apps included are, Phone, Messages (just something that sends Messages), Contacts, Camera, X11 and Tab Mode."),yt=r(),Z=l("li"),Pt=s("The ones coded my me are Phone (just a dialer ), Messages (just something that sends Messages), Contacts (stores contacts in config file"),_t=r(),$=l("li"),Et=s("The Camera app actually adafruit pi cam software , which is included under BSD license"),Ct=r(),ee=l("li"),It=s("X11 shows the X Server with Matchbox Desktop Environment on PiTFT, while Tab Mode actually shows the full Raspbian Desktop through the main TV Output, HDMI or Composite"),ve=r(),g=l("p"),kt=s("What it can do:"),ye=r(),b=l("ol"),te=l("li"),wt=s("Modular (Anything Major like the PiTFT, Camera, Pi, FONA etc. can be removed and replaced)(Small components like the buttons can be easily desoldered)"),Tt=r(),oe=l("li"),Lt=s("Expandable (All unused GPIO can be used through the female header connectors, I2C is also available)(4 Full USB ports)"),gt=r(),le=l("li"),St=s("Can be used in other projects (eg. Upcoming Home Automation System)"),Mt=r(),ae=l("li"),At=s("Full power of Command Line and X11 Linux (Programming)"),Bt=r(),ie=l("li"),Ft=s("Portable use (But battery is not that good and would be best used as a UPS)"),Nt=r(),se=l("li"),Rt=s("Can Receive and send Phone Calls and SMS through embedded Earpiece"),Gt=r(),ne=l("li"),Dt=s("Why build This: Why not?"),Pe=r(),S=l("p"),Ot=s("That’s all. Thanks for reading. Have Fun!"),_e=r(),P=l("p"),xt=s("Original Source at "),_=l("a"),Ht=s("http://makingbuildingstuff.blogspot.sg/2016/03/blockcompi-block-of-computer-of.html"),Wt=s(" for more info"),this.h()},l(t){y=a(t,"H1",{});var c=i(y);Ce=n(c,"BlockComPi"),c.forEach(o),re=d(t),E=a(t,"P",{});var Ut=i(E);Ie=n(Ut,"A Block of a Computer of a Raspberry Pi Phone"),Ut.forEach(o),de=d(t),C=a(t,"P",{});var Xt=i(C);ke=n(Xt,"No longer working as of 2017 (due to 2G being phased out)"),Xt.forEach(o),he=d(t),I=a(t,"H2",{});var zt=i(I);we=n(zt,"Overview"),zt.forEach(o),ce=d(t),k=a(t,"P",{});var Vt=i(k);Te=n(Vt,"Thought of what to do with your Raspberry Pi? During Mid 2015, I decided to use a Raspberry Pi 2, and mainly some other components to build a Raspberry Pi Phone, mainly because i had an Adafruit FONA 2G that is going to be outdated in 2017. This design is partially based on the PiPhone, because i also conveniently had a PiTFT 2.8 , so I couldn’t use this TyPhone Design."),Vt.forEach(o),ue=d(t),w=a(t,"P",{});var Jt=i(w);Le=n(Jt,`Most DIY Phones back then only showed that they could make phone calls.
I wanted to improve it and make it receive phone calls as well as send/ receive text messages`),Jt.forEach(o),pe=d(t),T=a(t,"P",{});var qt=i(T);ge=n(qt,"Components needed to build:"),qt.forEach(o),fe=d(t),h=a(t,"OL",{});var f=i(h);M=a(f,"LI",{});var Yt=i(M);Se=n(Yt,"Raspberry Pi 2"),Yt.forEach(o),Me=d(f),A=a(f,"LI",{});var Kt=i(A);Ae=n(Kt,"Raspberry Pi Camera Module"),Kt.forEach(o),Be=d(f),B=a(f,"LI",{});var Qt=i(B);Fe=n(Qt,"Adafruit PiTFT 2.8 resistive"),Qt.forEach(o),Ne=d(f),F=a(f,"LI",{});var Zt=i(F);Re=n(Zt,"Adafruit FONA 2G (could use 3G but have to modify the design a bit)"),Zt.forEach(o),Ge=d(f),N=a(f,"LI",{});var $t=i(N);De=n($t,"Earphones with Mic"),$t.forEach(o),Oe=d(f),R=a(f,"LI",{});var eo=i(R);xe=n(eo,"5V boost converter"),eo.forEach(o),He=d(f),G=a(f,"LI",{});var to=i(G);We=n(to,"2000mah or so battery from phone"),to.forEach(o),je=d(f),D=a(f,"LI",{});var oo=i(D);Ue=n(oo,"Buttons, Female Headers, Diode"),oo.forEach(o),Xe=d(f),O=a(f,"LI",{});var lo=i(O);ze=n(lo,"Wires and a PCB to connect everything together"),lo.forEach(o),Ve=d(f),x=a(f,"LI",{});var ao=i(x);Je=n(ao,"White Acrylic Case with PLA filament from 3Doodler to connect the pieces together"),ao.forEach(o),qe=d(f),H=a(f,"LI",{});var io=i(H);Ye=n(io,"Wooden Back Plate"),io.forEach(o),Ke=d(f),W=a(f,"LI",{});var so=i(W);Qe=n(so,"Black Stylus (Nintendo DS)"),so.forEach(o),Ze=d(f),j=a(f,"LI",{});var no=i(j);$e=n(no,"Buzzer (For Notifications) (connects through expansion port)"),no.forEach(o),f.forEach(o),me=d(t),L=a(t,"P",{});var ro=i(L);et=n(ro,"Software:"),ro.forEach(o),be=d(t),u=a(t,"OL",{});var m=i(u);U=a(m,"LI",{});var ho=i(U);tt=n(ho,"Based on Raspbian Jessie"),ho.forEach(o),ot=d(m),X=a(m,"LI",{});var co=i(X);lt=n(co,"Crappily Coded in Python"),co.forEach(o),at=d(m),z=a(m,"LI",{});var uo=i(z);it=n(uo,"Uses PyGame, with PiTFT Rotated 180"),uo.forEach(o),st=d(m),V=a(m,"LI",{});var po=i(V);nt=n(po,"garthvh’s menu_8button.py is under no license, and has been adapted into PitftGraphicLib.py for easier use with PyGame in my code"),po.forEach(o),rt=d(m),J=a(m,"LI",{});var fo=i(J);dt=n(fo,"No Bitmaps or images used"),fo.forEach(o),ht=d(m),q=a(m,"LI",{});var mo=i(q);ct=n(mo,"Note that virtual keyboard, licensed under the GNU GPL, is included, used, and has not been modified."),mo.forEach(o),ut=d(m),Y=a(m,"LI",{});var bo=i(Y);pt=n(bo,"The Main Menu, Notifcentral.py, has a Notifications and Service system and an App drawer which layout apps as in App.py"),bo.forEach(o),ft=d(m),K=a(m,"LI",{});var vo=i(K);mt=n(vo,"Can actually Receive and send Phone Calls and SMS through Notifications and Service System"),vo.forEach(o),bt=d(m),Q=a(m,"LI",{});var yo=i(Q);vt=n(yo,"The Apps included are, Phone, Messages (just something that sends Messages), Contacts, Camera, X11 and Tab Mode."),yo.forEach(o),yt=d(m),Z=a(m,"LI",{});var Po=i(Z);Pt=n(Po,"The ones coded my me are Phone (just a dialer ), Messages (just something that sends Messages), Contacts (stores contacts in config file"),Po.forEach(o),_t=d(m),$=a(m,"LI",{});var _o=i($);Et=n(_o,"The Camera app actually adafruit pi cam software , which is included under BSD license"),_o.forEach(o),Ct=d(m),ee=a(m,"LI",{});var Eo=i(ee);It=n(Eo,"X11 shows the X Server with Matchbox Desktop Environment on PiTFT, while Tab Mode actually shows the full Raspbian Desktop through the main TV Output, HDMI or Composite"),Eo.forEach(o),m.forEach(o),ve=d(t),g=a(t,"P",{});var Co=i(g);kt=n(Co,"What it can do:"),Co.forEach(o),ye=d(t),b=a(t,"OL",{});var v=i(b);te=a(v,"LI",{});var Io=i(te);wt=n(Io,"Modular (Anything Major like the PiTFT, Camera, Pi, FONA etc. can be removed and replaced)(Small components like the buttons can be easily desoldered)"),Io.forEach(o),Tt=d(v),oe=a(v,"LI",{});var ko=i(oe);Lt=n(ko,"Expandable (All unused GPIO can be used through the female header connectors, I2C is also available)(4 Full USB ports)"),ko.forEach(o),gt=d(v),le=a(v,"LI",{});var wo=i(le);St=n(wo,"Can be used in other projects (eg. Upcoming Home Automation System)"),wo.forEach(o),Mt=d(v),ae=a(v,"LI",{});var To=i(ae);At=n(To,"Full power of Command Line and X11 Linux (Programming)"),To.forEach(o),Bt=d(v),ie=a(v,"LI",{});var Lo=i(ie);Ft=n(Lo,"Portable use (But battery is not that good and would be best used as a UPS)"),Lo.forEach(o),Nt=d(v),se=a(v,"LI",{});var go=i(se);Rt=n(go,"Can Receive and send Phone Calls and SMS through embedded Earpiece"),go.forEach(o),Gt=d(v),ne=a(v,"LI",{});var So=i(ne);Dt=n(So,"Why build This: Why not?"),So.forEach(o),v.forEach(o),Pe=d(t),S=a(t,"P",{});var Mo=i(S);Ot=n(Mo,"That’s all. Thanks for reading. Have Fun!"),Mo.forEach(o),_e=d(t),P=a(t,"P",{});var Ee=i(P);xt=n(Ee,"Original Source at "),_=a(Ee,"A",{href:!0,rel:!0});var Ao=i(_);Ht=n(Ao,"http://makingbuildingstuff.blogspot.sg/2016/03/blockcompi-block-of-computer-of.html"),Ao.forEach(o),Wt=n(Ee," for more info"),Ee.forEach(o),this.h()},h(){Bo(_,"href","http://makingbuildingstuff.blogspot.sg/2016/03/blockcompi-block-of-computer-of.html"),Bo(_,"rel","nofollow")},m(t,c){p(t,y,c),e(y,Ce),p(t,re,c),p(t,E,c),e(E,Ie),p(t,de,c),p(t,C,c),e(C,ke),p(t,he,c),p(t,I,c),e(I,we),p(t,ce,c),p(t,k,c),e(k,Te),p(t,ue,c),p(t,w,c),e(w,Le),p(t,pe,c),p(t,T,c),e(T,ge),p(t,fe,c),p(t,h,c),e(h,M),e(M,Se),e(h,Me),e(h,A),e(A,Ae),e(h,Be),e(h,B),e(B,Fe),e(h,Ne),e(h,F),e(F,Re),e(h,Ge),e(h,N),e(N,De),e(h,Oe),e(h,R),e(R,xe),e(h,He),e(h,G),e(G,We),e(h,je),e(h,D),e(D,Ue),e(h,Xe),e(h,O),e(O,ze),e(h,Ve),e(h,x),e(x,Je),e(h,qe),e(h,H),e(H,Ye),e(h,Ke),e(h,W),e(W,Qe),e(h,Ze),e(h,j),e(j,$e),p(t,me,c),p(t,L,c),e(L,et),p(t,be,c),p(t,u,c),e(u,U),e(U,tt),e(u,ot),e(u,X),e(X,lt),e(u,at),e(u,z),e(z,it),e(u,st),e(u,V),e(V,nt),e(u,rt),e(u,J),e(J,dt),e(u,ht),e(u,q),e(q,ct),e(u,ut),e(u,Y),e(Y,pt),e(u,ft),e(u,K),e(K,mt),e(u,bt),e(u,Q),e(Q,vt),e(u,yt),e(u,Z),e(Z,Pt),e(u,_t),e(u,$),e($,Et),e(u,Ct),e(u,ee),e(ee,It),p(t,ve,c),p(t,g,c),e(g,kt),p(t,ye,c),p(t,b,c),e(b,te),e(te,wt),e(b,Tt),e(b,oe),e(oe,Lt),e(b,gt),e(b,le),e(le,St),e(b,Mt),e(b,ae),e(ae,At),e(b,Bt),e(b,ie),e(ie,Ft),e(b,Nt),e(b,se),e(se,Rt),e(b,Gt),e(b,ne),e(ne,Dt),p(t,Pe,c),p(t,S,c),e(S,Ot),p(t,_e,c),p(t,P,c),e(P,xt),e(P,_),e(_,Ht),e(P,Wt)},p:jt,i:jt,o:jt,d(t){t&&o(y),t&&o(re),t&&o(E),t&&o(de),t&&o(C),t&&o(he),t&&o(I),t&&o(ce),t&&o(k),t&&o(ue),t&&o(w),t&&o(pe),t&&o(T),t&&o(fe),t&&o(h),t&&o(me),t&&o(L),t&&o(be),t&&o(u),t&&o(ve),t&&o(g),t&&o(ye),t&&o(b),t&&o(Pe),t&&o(S),t&&o(_e),t&&o(P)}}}const xo={title:"BlockComPi",date:"2015-06",description:"A Block of a Computer of a Raspberry Pi Phone",link:"https://github.com/Hackin7/BlockComPi",tags:["Highlight","Personal Project","Raspberry Pi","Python","Electronics","Casing"],cover:"https://raw.githubusercontent.com/Hackin7/BlockComPi/master/Images/DSC_4991.JPG"};class Ho extends No{constructor(y){super(),Ro(this,y,null,Do,Go,{})}}export{Ho as default,xo as metadata};
