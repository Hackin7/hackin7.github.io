import{S as ko,i as Po,s as Do,k as i,q as a,a as s,l,m as r,r as n,h as o,c as d,b as f,G as e,C as Nt}from"./index-91060271.js";function Mo(Ao){let _,Ve,ue,L,We,ve,m,G,xe,Ue,K,Be,Fe,N,Oe,He,z,Ge,Ke,Q,Ne,ye,ge,Ee,b,ze,_e,A,Qe,Ie,c,k,Ze,Z,R,Re,je,j,qe,Je,q,Xe,Ye,J,$e,et,X,tt,Se,P,ot,we,h,D,it,g,Y,lt,rt,$,at,nt,ee,st,dt,M,pt,w,te,ft,mt,oe,ct,ht,C,ut,E,ie,vt,yt,le,gt,Et,re,_t,Le,T,It,be,I,V,St,ae,ne,wt,Lt,W,bt,se,de,At,Ae,x,kt,ke,S,pe,Pt,Dt,fe,Mt,Pe,U,Ct,De,u,me,Tt,Vt,ce,Wt,xt,he,Ut;return{c(){_=i("p"),Ve=a("Worked on the Sensor Systems in the Drone Versus Drone Project. The Sensor Systems mainly include 2 smartphones streaming their camera feed to a Computer. The computer then then triangulates the drone’s position to be viewed on a C2 system."),ue=s(),L=i("p"),We=a("My main work involves"),ve=s(),m=i("ol"),G=i("li"),xe=a("Migrating video analytics processing to the cloud EC2 Instances, and linking devices together over the Internet using Wireguard & AWS IoT Core."),Ue=s(),K=i("li"),Be=a("Improved the android app for video streaming. Developed tools such as a drone deployment calculator to assist in deploying & Testing the setup."),Fe=s(),N=i("li"),Oe=a("Modified an off the shelf Gimbal to be remotely controlled through BLE or USB Serial with an Arduino. Made it turn to our desired bearing with the help of the Phone’s Compass."),He=s(),z=i("li"),Ge=a("Experimented with ways to improve performance, such as tiling of the video feed, improving the video pipeline through FFMpeg options and more."),Ke=s(),Q=i("li"),Ne=a("Tested improvements multiple times in outfield conditions. Learnt about basic operation of a drone, as well as safety procedures."),ye=s(),ge=i("hr"),Ee=s(),b=i("h1"),ze=a("Breakdown of the things I did"),_e=s(),A=i("p"),Qe=a("Networking"),Ie=s(),c=i("ol"),k=i("li"),Ze=a("Handled RTSP, Amazon Kinesis Video Streams for streaming data"),Z=i("ul"),R=i("li"),Re=a("Attempted to improve KVS latency through Retrieving the HLS link and handling it with FFMpeg"),je=s(),j=i("li"),qe=a("Handled ZMQ and AWS IoT Core for sending Metadata"),Je=s(),q=i("li"),Xe=a("Experimented and Used SSH Tunneling for connecting devices over the Internet, as well as AWS IoT Core Tunneling"),Ye=s(),J=i("li"),$e=a("Set up a Wireguard VPN on AWS EC2 to connect devices together and send information over the Internet. VPN was used for a demonstration of the system to the potential users."),et=s(),X=i("li"),tt=a("Other SysAdmin stuff (configuring scripts to run on boot up, setting up EC2 Instances with a bastion host, key rotation etc.)"),Se=s(),P=i("p"),ot=a("Application Development"),we=s(),h=i("ol"),D=i("li"),it=a("Improved the Android app for video streaming"),g=i("ul"),Y=i("li"),lt=a("Added support for AWS IoT Core for sending metadata, as well as improved the metadata format to support more features such as dynamic FOV calculation, location Data etc."),rt=s(),$=i("li"),at=a("Added support to KVS for video streaming, as well as implemented features for KVS Camera streaming such as zoom"),nt=s(),ee=i("li"),st=a("Implemented some features, such as zoom, resolution, and starting/stopping stream to be controlled over ZMQ"),dt=s(),M=i("li"),pt=a("Developed a simple deployment calculator in Python tkinter"),w=i("ul"),te=i("li"),ft=a("calculates locations on where to fly the drone for easy testing (calculation not fully done by me), and displays it on a map"),mt=s(),oe=i("li"),ct=a("allows for easy testing of experiments with the video analytics algorithm"),ht=s(),C=i("li"),ut=a("Assisted in developing the more user friendly control Interface (Flutter)"),E=i("ul"),ie=i("li"),vt=a("Gave suggestions for the architecture"),yt=s(),le=i("li"),gt=a("Developed the backend interfaced with ZQM to control the Video Analytics Software"),Et=s(),re=i("li"),_t=a("UI tweaks to support mobile view"),Le=s(),T=i("p"),It=a("Electronics"),be=s(),I=i("ol"),V=i("li"),St=a("Did some simple Electronics Soldering, testing and Debugging of components on the drone"),ae=i("ul"),ne=i("li"),wt=a("most notably, assisted with serial communications, speaker"),Lt=s(),W=i("li"),bt=a("Modified an off the shelf Gimbal to be remotely controlled through BLE or USB Serial."),se=i("ul"),de=i("li"),At=a("Wrote a simple python script that connects to the Arduino over USB Serial to turn the Gimbal to a certain bearing based on the Phone’s compass value"),Ae=s(),x=i("p"),kt=a("3D Modelling"),ke=s(),S=i("ol"),pe=i("li"),Pt=a("3D Modelled & Printed a simple mount to prevent phone tripod clamps from pressing on the Pixel 7 Pro’s Volume Buttons"),Dt=s(),fe=i("li"),Mt=a("3D Modelled & Printed Dastan"),Pe=s(),U=i("p"),Ct=a("Others"),De=s(),u=i("ol"),me=i("li"),Tt=a("Experimented with cropping (and by extension, tiling) of video streams to improve performance of video analytics"),Vt=s(),ce=i("li"),Wt=a("Dockerisation of Video Analytics code"),xt=s(),he=i("li"),Ut=a("Experimented with using Unity to more accurately test video analytics code.")},l(t){_=l(t,"P",{});var p=r(_);Ve=n(p,"Worked on the Sensor Systems in the Drone Versus Drone Project. The Sensor Systems mainly include 2 smartphones streaming their camera feed to a Computer. The computer then then triangulates the drone’s position to be viewed on a C2 system."),p.forEach(o),ue=d(t),L=l(t,"P",{});var zt=r(L);We=n(zt,"My main work involves"),zt.forEach(o),ve=d(t),m=l(t,"OL",{});var v=r(m);G=l(v,"LI",{});var Qt=r(G);xe=n(Qt,"Migrating video analytics processing to the cloud EC2 Instances, and linking devices together over the Internet using Wireguard & AWS IoT Core."),Qt.forEach(o),Ue=d(v),K=l(v,"LI",{});var Zt=r(K);Be=n(Zt,"Improved the android app for video streaming. Developed tools such as a drone deployment calculator to assist in deploying & Testing the setup."),Zt.forEach(o),Fe=d(v),N=l(v,"LI",{});var Rt=r(N);Oe=n(Rt,"Modified an off the shelf Gimbal to be remotely controlled through BLE or USB Serial with an Arduino. Made it turn to our desired bearing with the help of the Phone’s Compass."),Rt.forEach(o),He=d(v),z=l(v,"LI",{});var jt=r(z);Ge=n(jt,"Experimented with ways to improve performance, such as tiling of the video feed, improving the video pipeline through FFMpeg options and more."),jt.forEach(o),Ke=d(v),Q=l(v,"LI",{});var qt=r(Q);Ne=n(qt,"Tested improvements multiple times in outfield conditions. Learnt about basic operation of a drone, as well as safety procedures."),qt.forEach(o),v.forEach(o),ye=d(t),ge=l(t,"HR",{}),Ee=d(t),b=l(t,"H1",{});var Jt=r(b);ze=n(Jt,"Breakdown of the things I did"),Jt.forEach(o),_e=d(t),A=l(t,"P",{});var Xt=r(A);Qe=n(Xt,"Networking"),Xt.forEach(o),Ie=d(t),c=l(t,"OL",{});var y=r(c);k=l(y,"LI",{});var Bt=r(k);Ze=n(Bt,"Handled RTSP, Amazon Kinesis Video Streams for streaming data"),Z=l(Bt,"UL",{});var Yt=r(Z);R=l(Yt,"LI",{});var $t=r(R);Re=n($t,"Attempted to improve KVS latency through Retrieving the HLS link and handling it with FFMpeg"),$t.forEach(o),Yt.forEach(o),Bt.forEach(o),je=d(y),j=l(y,"LI",{});var eo=r(j);qe=n(eo,"Handled ZMQ and AWS IoT Core for sending Metadata"),eo.forEach(o),Je=d(y),q=l(y,"LI",{});var to=r(q);Xe=n(to,"Experimented and Used SSH Tunneling for connecting devices over the Internet, as well as AWS IoT Core Tunneling"),to.forEach(o),Ye=d(y),J=l(y,"LI",{});var oo=r(J);$e=n(oo,"Set up a Wireguard VPN on AWS EC2 to connect devices together and send information over the Internet. VPN was used for a demonstration of the system to the potential users."),oo.forEach(o),et=d(y),X=l(y,"LI",{});var io=r(X);tt=n(io,"Other SysAdmin stuff (configuring scripts to run on boot up, setting up EC2 Instances with a bastion host, key rotation etc.)"),io.forEach(o),y.forEach(o),Se=d(t),P=l(t,"P",{});var lo=r(P);ot=n(lo,"Application Development"),lo.forEach(o),we=d(t),h=l(t,"OL",{});var B=r(h);D=l(B,"LI",{});var Ft=r(D);it=n(Ft,"Improved the Android app for video streaming"),g=l(Ft,"UL",{});var F=r(g);Y=l(F,"LI",{});var ro=r(Y);lt=n(ro,"Added support for AWS IoT Core for sending metadata, as well as improved the metadata format to support more features such as dynamic FOV calculation, location Data etc."),ro.forEach(o),rt=d(F),$=l(F,"LI",{});var ao=r($);at=n(ao,"Added support to KVS for video streaming, as well as implemented features for KVS Camera streaming such as zoom"),ao.forEach(o),nt=d(F),ee=l(F,"LI",{});var no=r(ee);st=n(no,"Implemented some features, such as zoom, resolution, and starting/stopping stream to be controlled over ZMQ"),no.forEach(o),F.forEach(o),Ft.forEach(o),dt=d(B),M=l(B,"LI",{});var Ot=r(M);pt=n(Ot,"Developed a simple deployment calculator in Python tkinter"),w=l(Ot,"UL",{});var Me=r(w);te=l(Me,"LI",{});var so=r(te);ft=n(so,"calculates locations on where to fly the drone for easy testing (calculation not fully done by me), and displays it on a map"),so.forEach(o),mt=d(Me),oe=l(Me,"LI",{});var po=r(oe);ct=n(po,"allows for easy testing of experiments with the video analytics algorithm"),po.forEach(o),Me.forEach(o),Ot.forEach(o),ht=d(B),C=l(B,"LI",{});var Ht=r(C);ut=n(Ht,"Assisted in developing the more user friendly control Interface (Flutter)"),E=l(Ht,"UL",{});var O=r(E);ie=l(O,"LI",{});var fo=r(ie);vt=n(fo,"Gave suggestions for the architecture"),fo.forEach(o),yt=d(O),le=l(O,"LI",{});var mo=r(le);gt=n(mo,"Developed the backend interfaced with ZQM to control the Video Analytics Software"),mo.forEach(o),Et=d(O),re=l(O,"LI",{});var co=r(re);_t=n(co,"UI tweaks to support mobile view"),co.forEach(o),O.forEach(o),Ht.forEach(o),B.forEach(o),Le=d(t),T=l(t,"P",{});var ho=r(T);It=n(ho,"Electronics"),ho.forEach(o),be=d(t),I=l(t,"OL",{});var Ce=r(I);V=l(Ce,"LI",{});var Gt=r(V);St=n(Gt,"Did some simple Electronics Soldering, testing and Debugging of components on the drone"),ae=l(Gt,"UL",{});var uo=r(ae);ne=l(uo,"LI",{});var vo=r(ne);wt=n(vo,"most notably, assisted with serial communications, speaker"),vo.forEach(o),uo.forEach(o),Gt.forEach(o),Lt=d(Ce),W=l(Ce,"LI",{});var Kt=r(W);bt=n(Kt,"Modified an off the shelf Gimbal to be remotely controlled through BLE or USB Serial."),se=l(Kt,"UL",{});var yo=r(se);de=l(yo,"LI",{});var go=r(de);At=n(go,"Wrote a simple python script that connects to the Arduino over USB Serial to turn the Gimbal to a certain bearing based on the Phone’s compass value"),go.forEach(o),yo.forEach(o),Kt.forEach(o),Ce.forEach(o),Ae=d(t),x=l(t,"P",{});var Eo=r(x);kt=n(Eo,"3D Modelling"),Eo.forEach(o),ke=d(t),S=l(t,"OL",{});var Te=r(S);pe=l(Te,"LI",{});var _o=r(pe);Pt=n(_o,"3D Modelled & Printed a simple mount to prevent phone tripod clamps from pressing on the Pixel 7 Pro’s Volume Buttons"),_o.forEach(o),Dt=d(Te),fe=l(Te,"LI",{});var Io=r(fe);Mt=n(Io,"3D Modelled & Printed Dastan"),Io.forEach(o),Te.forEach(o),Pe=d(t),U=l(t,"P",{});var So=r(U);Ct=n(So,"Others"),So.forEach(o),De=d(t),u=l(t,"OL",{});var H=r(u);me=l(H,"LI",{});var wo=r(me);Tt=n(wo,"Experimented with cropping (and by extension, tiling) of video streams to improve performance of video analytics"),wo.forEach(o),Vt=d(H),ce=l(H,"LI",{});var Lo=r(ce);Wt=n(Lo,"Dockerisation of Video Analytics code"),Lo.forEach(o),xt=d(H),he=l(H,"LI",{});var bo=r(he);Ut=n(bo,"Experimented with using Unity to more accurately test video analytics code."),bo.forEach(o),H.forEach(o)},m(t,p){f(t,_,p),e(_,Ve),f(t,ue,p),f(t,L,p),e(L,We),f(t,ve,p),f(t,m,p),e(m,G),e(G,xe),e(m,Ue),e(m,K),e(K,Be),e(m,Fe),e(m,N),e(N,Oe),e(m,He),e(m,z),e(z,Ge),e(m,Ke),e(m,Q),e(Q,Ne),f(t,ye,p),f(t,ge,p),f(t,Ee,p),f(t,b,p),e(b,ze),f(t,_e,p),f(t,A,p),e(A,Qe),f(t,Ie,p),f(t,c,p),e(c,k),e(k,Ze),e(k,Z),e(Z,R),e(R,Re),e(c,je),e(c,j),e(j,qe),e(c,Je),e(c,q),e(q,Xe),e(c,Ye),e(c,J),e(J,$e),e(c,et),e(c,X),e(X,tt),f(t,Se,p),f(t,P,p),e(P,ot),f(t,we,p),f(t,h,p),e(h,D),e(D,it),e(D,g),e(g,Y),e(Y,lt),e(g,rt),e(g,$),e($,at),e(g,nt),e(g,ee),e(ee,st),e(h,dt),e(h,M),e(M,pt),e(M,w),e(w,te),e(te,ft),e(w,mt),e(w,oe),e(oe,ct),e(h,ht),e(h,C),e(C,ut),e(C,E),e(E,ie),e(ie,vt),e(E,yt),e(E,le),e(le,gt),e(E,Et),e(E,re),e(re,_t),f(t,Le,p),f(t,T,p),e(T,It),f(t,be,p),f(t,I,p),e(I,V),e(V,St),e(V,ae),e(ae,ne),e(ne,wt),e(I,Lt),e(I,W),e(W,bt),e(W,se),e(se,de),e(de,At),f(t,Ae,p),f(t,x,p),e(x,kt),f(t,ke,p),f(t,S,p),e(S,pe),e(pe,Pt),e(S,Dt),e(S,fe),e(fe,Mt),f(t,Pe,p),f(t,U,p),e(U,Ct),f(t,De,p),f(t,u,p),e(u,me),e(me,Tt),e(u,Vt),e(u,ce),e(ce,Wt),e(u,xt),e(u,he),e(he,Ut)},p:Nt,i:Nt,o:Nt,d(t){t&&o(_),t&&o(ue),t&&o(L),t&&o(ve),t&&o(m),t&&o(ye),t&&o(ge),t&&o(Ee),t&&o(b),t&&o(_e),t&&o(A),t&&o(Ie),t&&o(c),t&&o(Se),t&&o(P),t&&o(we),t&&o(h),t&&o(Le),t&&o(T),t&&o(be),t&&o(I),t&&o(Ae),t&&o(x),t&&o(ke),t&&o(S),t&&o(Pe),t&&o(U),t&&o(De),t&&o(u)}}}const To={title:"DSTA Internship",start_date:"2023-04-17",end_date:"2023-08-04",logo:"https://www.dsta.gov.sg/images/default-source/revamp/dsta_logoea8a31700a1d6b0c895eff0000f6c7a3.svg?sfvrsn=1f975adf_2",type:"work",description:"t",link:"https://github.com/Hackin7/",tags:["AWS","Python","C++","Networking"],cover:"https://flowbite.com/docs/images/blog/image-4.jpg"};class Vo extends ko{constructor(_){super(),Po(this,_,null,Mo,Do,{})}}export{Vo as default,To as metadata};
