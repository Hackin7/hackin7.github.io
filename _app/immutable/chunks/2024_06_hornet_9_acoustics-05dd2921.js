import{S as Z,i as z,s as J,k as a,q as u,a as j,l as i,m as n,r as d,h as s,c as S,n as C,b as x,G as e,C as A}from"./index-91060271.js";function K(Y){let t,h,w,l,T,I,_,P,v,m,y,D,f,F,M,g,E,b,p,c,L;return{c(){t=a("ol"),h=a("li"),w=u("Generated a Butterworth Filter using the "),l=a("a"),T=u("Filter Design Tool"),I=j(),_=a("li"),P=u("Implemented an STM32G473 PCB with add on filter boards. Meant to take in 4 hydrophone signals, and processed it."),v=j(),m=a("li"),y=u("Repurposed the PCB to use a regular microphone, and used CMSIS DSP FFT to implement a rudimentary communication system to send bits"),D=j(),f=a("li"),F=u("Configured & Debugged SPI Settings with STM32 Cube, and used PlatformIO. Added ST7735 LCD."),M=j(),g=a("li"),E=u("Debugged the main Hornet 9 Robot during pool tests, such as power issues, sensor reliability issues."),b=j(),p=a("p"),c=a("a"),L=u("Youtube Short"),this.h()},l(r){t=i(r,"OL",{});var o=n(t);h=i(o,"LI",{});var B=n(h);w=d(B,"Generated a Butterworth Filter using the "),l=i(B,"A",{href:!0,rel:!0});var R=n(l);T=d(R,"Filter Design Tool"),R.forEach(s),B.forEach(s),I=S(o),_=i(o,"LI",{});var G=n(_);P=d(G,"Implemented an STM32G473 PCB with add on filter boards. Meant to take in 4 hydrophone signals, and processed it."),G.forEach(s),v=S(o),m=i(o,"LI",{});var k=n(m);y=d(k,"Repurposed the PCB to use a regular microphone, and used CMSIS DSP FFT to implement a rudimentary communication system to send bits"),k.forEach(s),D=S(o),f=i(o,"LI",{});var H=n(f);F=d(H,"Configured & Debugged SPI Settings with STM32 Cube, and used PlatformIO. Added ST7735 LCD."),H.forEach(s),M=S(o),g=i(o,"LI",{});var O=n(g);E=d(O,"Debugged the main Hornet 9 Robot during pool tests, such as power issues, sensor reliability issues."),O.forEach(s),o.forEach(s),b=S(r),p=i(r,"P",{});var q=n(p);c=i(q,"A",{href:!0,rel:!0});var U=n(c);L=d(U,"Youtube Short"),U.forEach(s),q.forEach(s),this.h()},h(){C(l,"href","https://webench.ti.com/filter-design-tool/"),C(l,"rel","nofollow"),C(c,"href","https://youtube.com/shorts/diRej3JHTR4?si=pdne9r9ZMjfEfvD4"),C(c,"rel","nofollow")},m(r,o){x(r,t,o),e(t,h),e(h,w),e(h,l),e(l,T),e(t,I),e(t,_),e(_,P),e(t,v),e(t,m),e(m,y),e(t,D),e(t,f),e(f,F),e(t,M),e(t,g),e(g,E),x(r,b,o),x(r,p,o),e(p,c),e(c,L)},p:A,i:A,o:A,d(r){r&&s(t),r&&s(b),r&&s(p)}}}const W={title:"Hornet 9 Acoustics",date:"2023-06",description:"STM32 PCB with FFT and SPI Screen",link:"",tags:["STM32","Altium","C++"],cover:["https://www.youtube.com/embed/FN5eDfjWPFo?si=UTK4ZLzU-uXgoMBx","/projects/hornet_9_acoustics/1.jpeg","/projects/hornet_9_acoustics/2.png","/projects/hornet_9_acoustics/3.jpeg","/projects/hornet_9_acoustics/10.jpeg","/projects/hornet_9_acoustics/11.jpeg","/projects/hornet_9_acoustics/12.jpeg","/projects/hornet_9_acoustics/13.jpeg","/projects/hornet_9_acoustics/14.jpeg","/projects/hornet_9_acoustics/15.jpeg","/projects/hornet_9_acoustics/16.jpeg","/projects/hornet_9_acoustics/17.jpeg"]};class X extends Z{constructor(t){super(),z(this,t,null,K,J,{})}}export{X as default,W as metadata};
