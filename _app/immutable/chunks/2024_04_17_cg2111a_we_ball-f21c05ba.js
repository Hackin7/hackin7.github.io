import{S as Ie,i as Pe,s as we,k as o,q as i,a as d,l,m as r,r as n,h as t,c as u,b as D,G as e,C as pe}from"./index-91060271.js";function xe(Re){let m,q,O,L,F,H,s,b,G,p,y,N,W,E,C,K,Q,R,X,Y,I,Z,z,v,B,g,P,J,V,w,$,ee,A,te,c,x,oe,le,M,re,ae,T,U,ie,ne,k,se;return{c(){m=o("p"),q=i("Remote Controlled Robot with HectorSLAM Mapping and Colour Identification."),O=d(),L=o("p"),F=i("Unique Features"),H=d(),s=o("ol"),b=o("li"),G=i("Protoboard"),p=o("ul"),y=o("li"),N=i("Modularity and Reliability"),W=d(),E=o("li"),C=o("u"),K=i("The Raspberry Pi can remotely reset and reprogram the Arduino through the UART GPIO Pins"),Q=d(),R=o("li"),X=i("16x2 Onboard LCD for Telemetry"),Y=d(),I=o("li"),Z=i("Acrylic Casing for Protection"),z=d(),v=o("li"),B=i("Firmware"),g=o("ul"),P=o("li"),J=i("Precise movement using the ATMega2560’s Timers & the onboard Ultrasonic Sensor"),V=d(),w=o("li"),$=i("Colour Sensing and Detection"),ee=d(),A=o("li"),te=i("Software"),c=o("ul"),x=o("li"),oe=i("WASD control"),le=d(),M=o("li"),re=i("HectorSLAM Mapping on a Laptop through ROS Networking"),ae=d(),T=o("li"),U=o("u"),ie=i("Command Line Scripts to easily reset/ reprogram the Arduino during the limited run duration (as well as implement a soft kill)"),ne=d(),k=o("li"),se=i("tmux scripts for fast deployment")},l(a){m=l(a,"P",{});var h=r(m);q=n(h,"Remote Controlled Robot with HectorSLAM Mapping and Colour Identification."),h.forEach(t),O=u(a),L=l(a,"P",{});var me=r(L);F=n(me,"Unique Features"),me.forEach(t),H=u(a),s=l(a,"OL",{});var f=r(s);b=l(f,"LI",{});var ce=r(b);G=n(ce,"Protoboard"),p=l(ce,"UL",{});var S=r(p);y=l(S,"LI",{});var he=r(y);N=n(he,"Modularity and Reliability"),he.forEach(t),W=u(S),E=l(S,"LI",{});var fe=r(E);C=l(fe,"U",{});var _e=r(C);K=n(_e,"The Raspberry Pi can remotely reset and reprogram the Arduino through the UART GPIO Pins"),_e.forEach(t),fe.forEach(t),Q=u(S),R=l(S,"LI",{});var ge=r(R);X=n(ge,"16x2 Onboard LCD for Telemetry"),ge.forEach(t),S.forEach(t),ce.forEach(t),Y=u(f),I=l(f,"LI",{});var Le=r(I);Z=n(Le,"Acrylic Casing for Protection"),Le.forEach(t),z=u(f),v=l(f,"LI",{});var de=r(v);B=n(de,"Firmware"),g=l(de,"UL",{});var j=r(g);P=l(j,"LI",{});var be=r(P);J=n(be,"Precise movement using the ATMega2560’s Timers & the onboard Ultrasonic Sensor"),be.forEach(t),V=u(j),w=l(j,"LI",{});var ve=r(w);$=n(ve,"Colour Sensing and Detection"),ve.forEach(t),j.forEach(t),de.forEach(t),ee=u(f),A=l(f,"LI",{});var ue=r(A);te=n(ue,"Software"),c=l(ue,"UL",{});var _=r(c);x=l(_,"LI",{});var Ae=r(x);oe=n(Ae,"WASD control"),Ae.forEach(t),le=u(_),M=l(_,"LI",{});var Se=r(M);re=n(Se,"HectorSLAM Mapping on a Laptop through ROS Networking"),Se.forEach(t),ae=u(_),T=l(_,"LI",{});var ye=r(T);U=l(ye,"U",{});var Ee=r(U);ie=n(Ee,"Command Line Scripts to easily reset/ reprogram the Arduino during the limited run duration (as well as implement a soft kill)"),Ee.forEach(t),ye.forEach(t),ne=u(_),k=l(_,"LI",{});var Ce=r(k);se=n(Ce,"tmux scripts for fast deployment"),Ce.forEach(t),_.forEach(t),ue.forEach(t),f.forEach(t)},m(a,h){D(a,m,h),e(m,q),D(a,O,h),D(a,L,h),e(L,F),D(a,H,h),D(a,s,h),e(s,b),e(b,G),e(b,p),e(p,y),e(y,N),e(p,W),e(p,E),e(E,C),e(C,K),e(p,Q),e(p,R),e(R,X),e(s,Y),e(s,I),e(I,Z),e(s,z),e(s,v),e(v,B),e(v,g),e(g,P),e(P,J),e(g,V),e(g,w),e(w,$),e(s,ee),e(s,A),e(A,te),e(A,c),e(c,x),e(x,oe),e(c,le),e(c,M),e(M,re),e(c,ae),e(c,T),e(T,U),e(U,ie),e(c,ne),e(c,k),e(k,se)},p:pe,i:pe,o:pe,d(a){a&&t(m),a&&t(O),a&&t(L),a&&t(H),a&&t(s)}}}const Te={title:'CG2111A "Alex" Robot',date:"2024-04-17",description:"Remote Controlled Robot with HectorSLAM Mapping and Colour Identification",link:"https://github.com/Hackin7/cg2111a_we_ball",tags:["School Project","Raspberry Pi","Arduino","ROS","C++","SLAM","LIDAR","Team Project"],cover:["https://www.youtube.com/embed/hXDdRyuqhRk?si=CZdKuC2sH4NQfeYl","/projects/cg2111a_alex_robot/alex_robot.png","/projects/cg2111a_alex_robot/slam1.png","/projects/cg2111a_alex_robot/slam2.png","/projects/cg2111a_alex_robot/tmux.png"]};class Ue extends Ie{constructor(m){super(),Pe(this,m,null,xe,we,{})}}export{Ue as default,Te as metadata};
